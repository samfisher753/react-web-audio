{"version":3,"sources":["components/samples/exampleProject.js","components/AppBar.js","web-audio-api/my-buffer-loader-es6.js","components/samples/SampleItem.js","components/samples/SamplesList.js","components/audio-editor/BeatsGridItem.js","components/audio-editor/BeatsGrid.js","components/audio-editor/MixerChannel.js","components/audio-editor/Mixer.js","components/audio-editor/ControlBar.js","components/audio-editor/AudioEditor.js","components/samples/data.js","components/App.js","index.js"],"names":["exampleProject","AppBar","props","showFileChooser","bind","readFile","loadExampleProject","this","refs","load","click","e","files","target","length","file","reader","FileReader","onload","project","JSON","parse","result","value","ex","alert","readAsText","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","type","ref","style","display","onChange","accept","NavDropdown","title","Item","onClick","new","save","Link","React","Component","MyBufferLoader","context","url","channelId","callback","request","XMLHttpRequest","open","responseType","loader","decodeAudioData","response","buffer","error","console","onerror","send","SampleItem","loadAndPlay","play","appState","sampleSource","gainNode","stop","disconnect","createBufferSource","connect","time","currentTime","setAppState","start","splittedUrl","split","name","Card","fontSize","margin","marginBottom","Button","padding","width","float","addChannel","SamplesList","createGain","gain","destination","Jumbotron","textAlign","samples","map","key","BeatsGridItem","checked","addBeat","parseInt","removeBeat","bars","tc","sources","row","i","j","k","push","urlarray","filename","Tooltip","paddingRight","OverlayTrigger","placement","overlay","fontWeight","buildRow","BeatsGrid","minHeight","overflow","whiteSpace","channels","marginLeft","fontStyle","ch","MixerChannel","deleteChannel","parseFloat","updateState","text","height","borderStyle","borderWidth","marginRight","marginTop","min","max","step","WebkitAppearance","Mixer","master","ControlBar","changeFileType","defaultStyle","playing","recording","showSamplesList","filetype","record","AudioEditor","changeBars","changeBPM","changeTC","onChangeLoop","changeLoopTimes","endPlayHandler","changeStartBar","changeEndBar","oldBars","newBars","maxBeats","source","splice","endBar","startBar","bpm","stopAllSources","loading","initTime","noteTime","startBeat","endBeat","startBeatTime","duration","timeout","setTimeout","loop","loopTimes","loopCount","recorder","isRecording","cancelRecording","clearTimeout","setOptions","timeLimit","onComplete","rec","blob","window","download","startRecording","newStartBar","newEndBar","setEncoding","paddingBottom","disabled","App","AudioContext","webKitAudioContext","WebAudioRecorder","workerDir","options","ogg","quality","mp3","bitRate","state","channelNum","bufferLoaded","setState","disconnectAll","hideSamplesList","appReset","beats","masterGain","pch","sourcesToLoad","sourcesToSave","stringify","Container","Row","Col","Modal","show","onHide","Header","closeButton","Title","Body","Footer","ReactDOM","render","document","getElementById"],"mappings":"mPAgNiBA,EAhNI,CACjB,SAAY,CACV,CACE,GAAM,EACN,IAAO,6BACP,QAAW,CACT,CACE,GAAM,GAER,CACE,GAAM,GAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,KAGV,KAAQ,IAEV,CACE,GAAM,EACN,IAAO,sCACP,QAAW,CACT,CACE,GAAM,GAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,KAGV,KAAQ,IAEV,CACE,GAAM,EACN,IAAO,gCACP,QAAW,CACT,CACE,GAAM,GAER,CACE,GAAM,GAER,CACE,GAAM,GAER,CACE,GAAM,GAER,CACE,GAAM,GAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,KAGV,KAAQ,IAEV,CACE,GAAM,EACN,IAAO,+CACP,QAAW,CACT,CACE,GAAM,GAER,CACE,GAAM,IAER,CACE,GAAM,IAER,CACE,GAAM,KAGV,KAAQ,KAGZ,WAAc,GACd,WAAc,EACd,KAAQ,EACR,IAAO,GACP,GAAM,GACN,MAAQ,EACR,UAAa,EACb,SAAY,MACZ,SAAY,EACZ,OAAU,GC5ICC,E,kDA3Db,WAAYC,GAAO,IAAD,8BAChB,gBAEKC,gBAAkB,EAAKA,gBAAgB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","file":"static/js/main.7b2f8f73.chunk.js","sourcesContent":["let exampleProject = {\r\n    \"channels\": [\r\n      {\r\n        \"id\": 0,\r\n        \"url\": \"./samples/Kick-Drum-16.wav\",\r\n        \"sources\": [\r\n          {\r\n            \"id\": 0\r\n          },\r\n          {\r\n            \"id\": 8\r\n          },\r\n          {\r\n            \"id\": 16\r\n          },\r\n          {\r\n            \"id\": 24\r\n          },\r\n          {\r\n            \"id\": 32\r\n          },\r\n          {\r\n            \"id\": 40\r\n          },\r\n          {\r\n            \"id\": 48\r\n          },\r\n          {\r\n            \"id\": 56\r\n          }\r\n        ],\r\n        \"gain\": 0.5\r\n      },\r\n      {\r\n        \"id\": 1,\r\n        \"url\": \"./samples/Korg-N1R-Snare-Drum-2.wav\",\r\n        \"sources\": [\r\n          {\r\n            \"id\": 4\r\n          },\r\n          {\r\n            \"id\": 12\r\n          },\r\n          {\r\n            \"id\": 20\r\n          },\r\n          {\r\n            \"id\": 28\r\n          },\r\n          {\r\n            \"id\": 36\r\n          },\r\n          {\r\n            \"id\": 44\r\n          },\r\n          {\r\n            \"id\": 46\r\n          },\r\n          {\r\n            \"id\": 52\r\n          },\r\n          {\r\n            \"id\": 60\r\n          },\r\n          {\r\n            \"id\": 62\r\n          },\r\n          {\r\n            \"id\": 63\r\n          }\r\n        ],\r\n        \"gain\": 0.5\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"url\": \"./samples/Closed-Hi-Hat-1.wav\",\r\n        \"sources\": [\r\n          {\r\n            \"id\": 0\r\n          },\r\n          {\r\n            \"id\": 2\r\n          },\r\n          {\r\n            \"id\": 4\r\n          },\r\n          {\r\n            \"id\": 6\r\n          },\r\n          {\r\n            \"id\": 8\r\n          },\r\n          {\r\n            \"id\": 10\r\n          },\r\n          {\r\n            \"id\": 12\r\n          },\r\n          {\r\n            \"id\": 14\r\n          },\r\n          {\r\n            \"id\": 16\r\n          },\r\n          {\r\n            \"id\": 18\r\n          },\r\n          {\r\n            \"id\": 20\r\n          },\r\n          {\r\n            \"id\": 22\r\n          },\r\n          {\r\n            \"id\": 24\r\n          },\r\n          {\r\n            \"id\": 26\r\n          },\r\n          {\r\n            \"id\": 28\r\n          },\r\n          {\r\n            \"id\": 30\r\n          },\r\n          {\r\n            \"id\": 32\r\n          },\r\n          {\r\n            \"id\": 34\r\n          },\r\n          {\r\n            \"id\": 36\r\n          },\r\n          {\r\n            \"id\": 38\r\n          },\r\n          {\r\n            \"id\": 40\r\n          },\r\n          {\r\n            \"id\": 42\r\n          },\r\n          {\r\n            \"id\": 44\r\n          },\r\n          {\r\n            \"id\": 46\r\n          },\r\n          {\r\n            \"id\": 48\r\n          },\r\n          {\r\n            \"id\": 50\r\n          },\r\n          {\r\n            \"id\": 52\r\n          },\r\n          {\r\n            \"id\": 54\r\n          },\r\n          {\r\n            \"id\": 56\r\n          },\r\n          {\r\n            \"id\": 58\r\n          },\r\n          {\r\n            \"id\": 60\r\n          },\r\n          {\r\n            \"id\": 62\r\n          }\r\n        ],\r\n        \"gain\": 0.5\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"url\": \"./samples/Alesis-Fusion-Acoustic-Bass-C2.wav\",\r\n        \"sources\": [\r\n          {\r\n            \"id\": 0\r\n          },\r\n          {\r\n            \"id\": 16\r\n          },\r\n          {\r\n            \"id\": 32\r\n          },\r\n          {\r\n            \"id\": 48\r\n          }\r\n        ],\r\n        \"gain\": 0.5\r\n      }\r\n    ],\r\n    \"masterGain\": 0.5,\r\n    \"channelNum\": 4,\r\n    \"bars\": 4,\r\n    \"bpm\": 85,\r\n    \"tc\": 16,\r\n    \"loop\": false,\r\n    \"loopTimes\": 0,\r\n    \"filetype\": \"wav\",\r\n    \"startBar\": 1,\r\n    \"endBar\": 4\r\n  };\r\n\r\n  export default exampleProject;","import React from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\n\r\nimport exampleProject from './samples/exampleProject';\r\n\r\nclass AppBar extends React.Component {\r\n  constructor(props){\r\n    super();\r\n\r\n    this.showFileChooser = this.showFileChooser.bind(this);\r\n    this.readFile = this.readFile.bind(this);\r\n    this.loadExampleProject = this.loadExampleProject.bind(this);\r\n  }\r\n\r\n  showFileChooser() {\r\n    this.refs.load.click();\r\n  }\r\n\r\n  readFile(e) {\r\n    let files = e.target.files;\r\n    if (files.length === 1) {\r\n      let file = files[0];\r\n      let reader = new FileReader();\r\n\r\n      reader.onload = ((f) => {\r\n        return (e) => {\r\n          try {\r\n            let project = JSON.parse(e.target.result);\r\n            this.props.load(project);\r\n            this.refs.load.value = '';\r\n          } catch (ex) {\r\n            alert('Exception when trying to parse json: ' + ex);\r\n          }\r\n        }\r\n      })(file);\r\n\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  loadExampleProject(){\r\n    this.props.load(exampleProject);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#\">React Sequencer</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <input type='file' ref='load' style={{ display: 'none' }} onChange={this.readFile} accept='.json' />\r\n            <NavDropdown title=\"File\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item onClick={this.props.new.bind(null)}>New</NavDropdown.Item>\r\n              <NavDropdown.Item onClick={this.showFileChooser}>Load</NavDropdown.Item>\r\n              <NavDropdown.Item onClick={this.props.save.bind(null)}>Save</NavDropdown.Item>\r\n            </NavDropdown>\r\n            <Nav.Link onClick={this.loadExampleProject}>Load example project</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppBar;","\r\nclass MyBufferLoader {\r\n  constructor(context, url, channelId, callback) {\r\n    this.context = context;\r\n    this.url = url;\r\n    this.channelId = channelId;\r\n    this.onload = callback;\r\n\r\n    this.load = this.load.bind(this);\r\n  }\r\n\r\n  load() {\r\n    // Load buffer asynchronously\r\n    let request = new XMLHttpRequest();\r\n    request.open(\"GET\", this.url, true);\r\n    request.responseType = \"arraybuffer\";\r\n\r\n    let loader = this;\r\n\r\n    request.onload = () => {\r\n      // Asynchronously decode the audio file data in request.response\r\n      loader.context.decodeAudioData(\r\n        request.response,\r\n        (buffer) => {\r\n          if (!buffer) {\r\n            alert('error decoding file data: ' + loader.url);\r\n            return;\r\n          }\r\n          loader.onload(loader.channelId, buffer);\r\n        },\r\n        (error) => {\r\n          console.error('decodeAudioData error', error);\r\n        }\r\n      );\r\n    }\r\n\r\n    request.onerror = () => {\r\n      alert('BufferLoader: XHR error');\r\n    }\r\n\r\n    request.send();\r\n  }\r\n\r\n}\r\n\r\nexport default MyBufferLoader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport MyBufferLoader from '../../web-audio-api/my-buffer-loader-es6';\r\n\r\nclass SampleItem extends React.Component {\r\n  constructor(props){\r\n    super();\r\n\r\n    this.loadAndPlay = this.loadAndPlay.bind(this);\r\n    this.play = this.play.bind(this);\r\n  }\r\n\r\n  loadAndPlay(url) {\r\n    let context = this.props.appState.context;\r\n\r\n    // Load sample.\r\n    let bufferLoader = new MyBufferLoader(\r\n      context,\r\n      this.props.url,\r\n      -1,\r\n      this.play\r\n    );\r\n    \r\n    bufferLoader.load();\r\n  }\r\n\r\n  play(channelId, buffer) {\r\n    let context = this.props.appState.context;\r\n    let sampleSource = this.props.appState.sampleSource;\r\n    let gainNode = this.props.gainNode;\r\n    \r\n    if (sampleSource !== null){\r\n      sampleSource.stop(0);\r\n      sampleSource.disconnect();\r\n    }\r\n\r\n    sampleSource = context.createBufferSource();\r\n    sampleSource.buffer = buffer;\r\n    sampleSource.connect(gainNode);\r\n    let time = context.currentTime;\r\n\r\n    this.props.setAppState({\r\n      sampleSource: sampleSource,\r\n    });\r\n\r\n    sampleSource.start(time);\r\n  }  \r\n\r\n  render() {\r\n    let splittedUrl = this.props.url.split('/');\r\n    let name = splittedUrl[splittedUrl.length - 1];\r\n    return (\r\n      <Card style={{ fontSize: '12px', margin: '0px', marginBottom: '7px', display: 'block' }}>\r\n        <Button variant='secondary' style={{ padding: '3px', width: '50px' }} onClick={this.loadAndPlay.bind(null, this.props.url)} >Play</Button> {name} \r\n        <Button variant='secondary' style={{ padding: '3px', float: 'right', width: '50px' }} onClick={this.props.addChannel.bind(null, this.props.url)}>Add</Button>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nSampleItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SampleItem;\r\n","import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport SampleItem from './SampleItem';\r\n\r\nclass SamplesList extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.gainNode = props.appState.context.createGain();\r\n    this.gainNode.gain.value = 0.25;\r\n    this.gainNode.connect(props.appState.context.destination);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Jumbotron style={{ padding: '10px' }}>\r\n        <h3 style={{ textAlign: 'center' }}>Samples List</h3>\r\n        { this.props.appState.samples.map((url, key) => \r\n          <SampleItem\r\n            url={url}\r\n            key={key}\r\n            appState={this.props.appState}\r\n            setAppState={this.props.setAppState}\r\n            addChannel={this.props.addChannel}\r\n            gainNode={this.gainNode}\r\n          />\r\n          )\r\n        }\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SamplesList;\r\n","import React from 'react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nclass BeatsGridItem extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    if (e.target.checked) this.props.addBeat(this.props.id, parseInt(e.target.id));\r\n    else this.props.removeBeat(this.props.id, parseInt(e.target.id));\r\n  }\r\n\r\n  buildRow(bars) {\r\n    let tc = this.props.tc;\r\n    let sources = this.props.sources;\r\n    let row = [];\r\n    let id = 0;\r\n    let key = 0;\r\n    for (let i = 0; i < bars*(tc/4); ++i) {\r\n      for (let j = 0; j < 4; ++j) {\r\n        let checked = false;\r\n        for (let k=0; k<sources.length; ++k){\r\n          if (sources[k].id === id){\r\n            checked = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        row.push(<input id={id++} type=\"checkbox\" key={key++} onChange={this.onChange} checked={checked} />);\r\n      }\r\n      if (id%tc === 0) row.push(<span key={key++}>&nbsp;&nbsp;&nbsp;</span>);\r\n      else row.push(<span key={key++}>&nbsp;</span>);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  render() {\r\n    const urlarray = this.props.url.split('/');\r\n    const filename = urlarray[urlarray.length-1].split('.');\r\n    const name = (<Tooltip id='tooltip'><strong>{filename[0]}</strong></Tooltip>);\r\n    return(\r\n      <tr>\r\n        <td style={{ width: '40px', textAlign: 'right', paddingRight: '6px' }}>\r\n          <OverlayTrigger placement='left' overlay={name}>\r\n            <div style={{ fontWeight: 'bold', width: '100px', display: 'inline' }}><span>{this.props.id}  - </span></div>\r\n          </OverlayTrigger>\r\n        </td>\r\n        <td>\r\n          {this.buildRow(this.props.bars)}\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BeatsGridItem;\r\n","import React from 'react';\r\nimport BeatsGridItem from './BeatsGridItem';\r\n\r\nclass BeatsGrid extends React.Component {\r\n  render() {\r\n    return(\r\n      <div style={{ minHeight: '160px', overflow: 'auto', whiteSpace: 'nowrap' }}>\r\n        <h4>Beats Grid</h4>\r\n        <table>\r\n          <tbody>\r\n            { this.props.channels.length === 0 ?\r\n                <tr><td><span style={{ marginLeft: '20px', fontStyle: 'italic' }}>- No sounds were added yet. Add some new sounds, use the \"Add sounds\" button below.</span></td></tr>\r\n              :\r\n              this.props.channels.map((ch) => \r\n                <BeatsGridItem bars={this.props.bars} tc={this.props.tc} url={ch.url} id={ch.id} key={ch.id} sources={ch.sources} addBeat={this.props.addBeat} removeBeat={this.props.removeBeat} />\r\n              )\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BeatsGrid;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass MixerChannel extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.deleteChannel = this.deleteChannel.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    let gainNode = this.props.gainNode;\r\n    gainNode.gain.value = parseFloat(e.target.value);\r\n    this.props.updateState(this.props.id);\r\n  }\r\n\r\n  deleteChannel() {\r\n    this.props.deleteChannel(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    let text = 'Channel ' + this.props.id;\r\n    let defaultStyle = { width: '90px', height: '230px', textAlign: 'center', borderStyle: 'solid', borderWidth: '1px', padding: '5px', float: 'left', marginRight: '5px', marginBottom: '4px' };\r\n    let masterStyle = { width: '90px', height: '230px', textAlign: 'center', borderStyle: 'solid', borderWidth: '1px', padding: '5px', float: 'right', marginRight: '70px', marginBottom: '4px' };\r\n    let style = defaultStyle;\r\n    if (this.props.id === -1) style = masterStyle;\r\n    return (\r\n      <div style={style}>\r\n        <div style={{ marginTop: '5px', marginBottom: '10px' }}>\r\n          { this.props.id !== -1 ? \r\n            text : 'Master'\r\n          }\r\n        </div>\r\n        <center>\r\n          { this.props.id !== -1 ?\r\n              <input onChange={this.onChange} type='range' min=\"0.000\" max=\"1.000\" step=\"0.001\" value={this.props.gainNode.gain.value} style={{ width: '30px', WebkitAppearance: 'slider-vertical' }} />\r\n            :\r\n              <input onChange={this.onChange} type='range' min=\"0.000\" max=\"1.000\" step=\"0.001\" value={this.props.gainNode.gain.value} style={{ width: '30px', height: '165px', WebkitAppearance: 'slider-vertical' }} />\r\n          }\r\n        </center>\r\n        { this.props.id !== -1 && <center><Button variant='secondary' style={{ marginTop: '3px' }} onClick={this.deleteChannel}>Delete</Button></center> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MixerChannel;\r\n","import React from 'react';\r\nimport MixerChannel from './MixerChannel';\r\n\r\nclass Mixer extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n\r\n  updateState(id){\r\n    if (id === -1){\r\n      this.props.setAppState({\r\n        master: this.props.master,\r\n      });\r\n    }\r\n    else {\r\n      this.props.setAppState({\r\n        channels: this.props.channels,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div style={{ display: 'inline-block', width: '100%', minHeight: '250px', marginTop: '5px' }}>\r\n        <h4>Mixer</h4>\r\n        <div style={{ display: 'block' }}>\r\n          { this.props.channels.length === 0 ?\r\n                <span style={{ marginLeft: '20px', fontStyle: 'italic' }}>- No sounds were added yet. Add some new sounds, use the \"Add sounds\" button below.</span>\r\n            :\r\n            this.props.channels.map((ch) => \r\n              <MixerChannel id={ch.id} key={ch.id} gainNode={ch.gainNode} deleteChannel={this.props.deleteChannel} updateState={this.updateState} />\r\n            )\r\n          }\r\n          <MixerChannel id={-1} gainNode={this.props.master} updateState={this.updateState} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mixer;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ControlBar extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.changeFileType = this.changeFileType.bind(this);\r\n  }\r\n\r\n  changeFileType(e) {\r\n    this.props.changeFileType(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    let defaultStyle = 'secondary';\r\n    let playing = defaultStyle;\r\n    if (this.props.playing) playing = 'success';\r\n    let recording = defaultStyle;\r\n    if (this.props.recording) recording = 'danger';\r\n    return (\r\n      <div style={{ marginTop: '20px', minHeight: '80px' }}>\r\n        <h4>Control Bar</h4>\r\n        <Button onClick={this.props.play} variant={playing} style={{ marginRight: '5px' }}>Play</Button>\r\n        <Button variant={defaultStyle} onClick={this.props.stop}>Stop</Button>\r\n        <Button variant={defaultStyle} onClick={this.props.showSamplesList} style={{ marginLeft: '20px', marginRight: '15px' }}>Add sounds</Button>\r\n        File type:\r\n        <select style={{ marginLeft: '5px', marginRight: '10px' }} onChange={this.changeFileType} value={this.props.filetype}>\r\n          <option value='wav'>WAV 16 bits</option>\r\n          <option value='mp3'>MP3 320 kbps</option>\r\n          <option value='ogg'>OGG</option>\r\n        </select>\r\n        <Button onClick={this.props.record} variant={recording}>Record</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlBar;","import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport BeatsGrid from './BeatsGrid';\r\nimport Mixer from './Mixer';\r\nimport ControlBar from './ControlBar';\r\n\r\nclass AudioEditor extends React.Component {\r\n  constructor(props){\r\n    super();\r\n\r\n    this.changeBars = this.changeBars.bind(this);\r\n    this.changeBPM = this.changeBPM.bind(this);\r\n    this.changeTC = this.changeTC.bind(this);\r\n    this.addBeat = this.addBeat.bind(this);\r\n    this.removeBeat = this.removeBeat.bind(this);\r\n    this.play = this.play.bind(this);\r\n    this.stop = this.stop.bind(this);\r\n    this.record = this.record.bind(this);\r\n    this.onChangeLoop = this.onChangeLoop.bind(this);\r\n    this.changeLoopTimes = this.changeLoopTimes.bind(this);\r\n    this.changeFileType = this.changeFileType.bind(this);\r\n    this.endPlayHandler = this.endPlayHandler.bind(this);\r\n    this.changeStartBar = this.changeStartBar.bind(this);\r\n    this.changeEndBar = this.changeEndBar.bind(this);\r\n  }\r\n\r\n  changeBars(e) {\r\n    let oldBars = this.props.appState.bars;\r\n    let newBars = parseInt(e.target.value);\r\n    let channels = this.props.appState.channels;\r\n\r\n    if (newBars < oldBars) {\r\n      let maxBeats = newBars * this.props.appState.tc;\r\n      for (let i=0; i<channels.length; ++i) {\r\n        let sources = channels[i].sources;\r\n        for (let j=0; j<sources.length; ++j) {\r\n          if (sources[j].id >= maxBeats) {\r\n            if (sources[j].source !== null) {\r\n              sources[j].source.stop(0);\r\n              sources[j].source.disconnect();\r\n            }\r\n            sources.splice(j--, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let endBar = this.props.appState.endBar;\r\n    if (newBars < endBar) endBar = newBars;\r\n    let startBar = this.props.appState.startBar;\r\n    if (startBar > endBar) startBar = endBar;\r\n\r\n    this.props.setAppState({\r\n      channels: channels,\r\n      bars: newBars,\r\n      startBar: startBar,\r\n      endBar: endBar,\r\n    });\r\n  }\r\n\r\n  changeBPM(e) {\r\n    this.props.setAppState({\r\n      bpm: parseFloat(e.target.value),\r\n    });\r\n  }\r\n\r\n  changeTC(e) {\r\n    // Beats reset\r\n    this.props.stopAllSources();\r\n    let channels = this.props.appState.channels;\r\n    for (let i=0; i<channels.length; ++i)\r\n      channels[i].sources = [];\r\n\r\n    this.props.setAppState({\r\n      channels: channels,\r\n      tc: parseInt(e.target.value),\r\n    });\r\n  }\r\n\r\n  addBeat(ch, id) {\r\n    let appState = this.props.appState;\r\n    let channels = appState.channels;\r\n    let i = 0;\r\n    while (channels[i].id !== ch) ++i;\r\n\r\n\r\n    let j = 0;\r\n    while (j < channels[i].sources.length && channels[i].sources[j].id < id) ++j;\r\n\r\n    channels[i].sources.splice(j, 0, { id: id, source: null });\r\n\r\n    this.props.setAppState({\r\n      channels: channels,\r\n    });\r\n  }\r\n\r\n  removeBeat(ch, id) {\r\n    let channels = this.props.appState.channels;\r\n    let i = 0;\r\n    while (channels[i].id !== ch) ++i;\r\n\r\n    let j = 0;\r\n    while (channels[i].sources[j].id !== id) ++j;\r\n\r\n    channels[i].sources.splice(j, 1);\r\n\r\n    this.props.setAppState({\r\n      channels: channels,\r\n    });\r\n  }\r\n\r\n  play() {\r\n    let appState = this.props.appState;\r\n\r\n    if (!appState.playing && !appState.loading && appState.channels.length > 0) {\r\n      this.props.setAppState({\r\n        playing: true,\r\n      }, \r\n      () => {\r\n        let context = appState.context;\r\n        let channels = appState.channels;\r\n\r\n        let initTime = context.currentTime;\r\n        let bpm = appState.bpm;\r\n        let tc = appState.tc;\r\n        let noteTime = 240 / (bpm * tc);\r\n\r\n        let startBeat = (appState.startBar - 1) * tc;\r\n        let endBeat = appState.endBar * tc;\r\n        let startBeatTime = startBeat * noteTime;\r\n\r\n        for (let i=0; i<channels.length; ++i) {\r\n          let buffer = channels[i].buffer;\r\n          let sources = channels[i].sources;\r\n          let gainNode = channels[i].gainNode;\r\n\r\n          let j = 0;\r\n          while (j < sources.length && sources[j].id < startBeat) ++j;\r\n\r\n          while (j < sources.length && sources[j].id < endBeat) {\r\n            let source = context.createBufferSource();\r\n            source.buffer = buffer;\r\n            source.connect(gainNode);\r\n            let time = initTime + sources[j].id * noteTime - startBeatTime;\r\n            sources[j].source = source;\r\n            source.start(time);\r\n            ++j;\r\n          }\r\n        }\r\n\r\n        let duration = 240 / bpm * (appState.endBar - appState.startBar + 1) * 1000;\r\n        let timeout = setTimeout(() => {\r\n          this.endPlayHandler();\r\n        }, duration);\r\n\r\n        this.props.setAppState({\r\n          channels: channels,\r\n          timeout: timeout,\r\n        });\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  endPlayHandler(){\r\n    let appState = this.props.appState;\r\n    if (appState.loop){\r\n      // If finite loop\r\n      if (appState.loopTimes !== 0) {\r\n        // If remaining times\r\n        if (appState.loopCount < appState.loopTimes) {\r\n          this.props.setAppState({\r\n            loopCount: this.props.appState.loopCount + 1,\r\n            playing: false\r\n          },\r\n          this.play);\r\n        }\r\n        // If not remaining times\r\n        else {\r\n          this.props.setAppState({\r\n            playing: false,\r\n            loopCount: 1,\r\n          });\r\n        }\r\n      }\r\n      // If infinite loop\r\n      else {\r\n        // If recording\r\n        if (appState.recording){\r\n          this.props.setAppState({\r\n            playing: false,\r\n          });\r\n        }\r\n        // If not recording\r\n        else {\r\n          this.props.setAppState({\r\n            playing: false,\r\n          }, this.play);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      this.props.setAppState({\r\n        playing: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    if (this.props.appState.playing) {\r\n      if (this.props.appState.recorder.isRecording()) this.props.appState.recorder.cancelRecording();\r\n      clearTimeout(this.props.appState.timeout);\r\n      this.props.stopAllSources();\r\n      this.props.setAppState({\r\n        recording: false,\r\n        playing: false,\r\n        loopCount: 1,\r\n      });\r\n    }\r\n  }\r\n\r\n  record() {\r\n    let appState = this.props.appState;\r\n    if (!appState.recording && !appState.loading && appState.channels.length > 0) {\r\n      let bars = appState.endBar - appState.startBar + 1;\r\n      let bpm = appState.bpm;\r\n      let recorder = appState.recorder;\r\n      let duration = (( 240 * bars ) / bpm);\r\n      if (appState.loop && appState.loopTimes !== 0) duration = (( 240 * bars ) / bpm) * appState.loopTimes;\r\n      let type = appState.filetype;\r\n\r\n      recorder.setOptions({ timeLimit: duration });\r\n      recorder.onComplete = (rec, blob) => {\r\n        window.download(blob, 'mixdown.' + type);\r\n        this.props.setAppState({\r\n          recording: false,\r\n        });\r\n      };\r\n      \r\n      this.props.setAppState({\r\n        recording: true,\r\n      }, () => {\r\n        recorder.startRecording();\r\n        this.play();\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onChangeLoop(e) {\r\n    if (!e.target.checked){\r\n      this.props.setAppState({\r\n        loop: e.target.checked,\r\n        loopTimes: 0,\r\n        loopCount: 1,\r\n      });\r\n    }\r\n    else {\r\n      this.props.setAppState({\r\n        loop: e.target.checked,\r\n      });\r\n    }\r\n  }\r\n\r\n  changeLoopTimes(e) {\r\n    this.props.setAppState({\r\n      loopTimes: parseInt(e.target.value),\r\n    });\r\n  }\r\n\r\n  changeStartBar(e) {\r\n    let newStartBar = parseInt(e.target.value);\r\n    this.props.setAppState({\r\n      startBar: newStartBar,\r\n    });\r\n  }\r\n\r\n  changeEndBar(e) {\r\n    let newEndBar = parseInt(e.target.value);\r\n    this.props.setAppState({\r\n      endBar: newEndBar,\r\n    });\r\n  }\r\n\r\n  changeFileType(type) {\r\n    let recorder = this.props.appState.recorder;\r\n    if (!recorder.isRecording()) {\r\n      recorder.setEncoding(type);\r\n\r\n      this.props.setAppState({\r\n        filetype: type,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let appState = this.props.appState;\r\n    return(\r\n      <Jumbotron style={{ padding: '10px 30px', paddingBottom: '30px' }}>\r\n        <h3>Audio Editor</h3>\r\n        <h5 style={{ marginTop: '20px', marginLeft: '25px' }} >\r\n          Bars: <input type='number' min='1' value={appState.bars} onChange={this.changeBars} style={{ width: '50px', textAlign: 'center', marginRight: '10px' }} /> \r\n          BPM: <input type='number' min='0' value={appState.bpm} onChange={this.changeBPM} style={{ width: '60px', textAlign: 'center', marginRight: '10px' }} />\r\n          Time Correct: \r\n            <select value={appState.tc} onChange={this.changeTC} style={{ width: '50px', marginLeft: '5px', marginRight: '10px' }}>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"8\">8</option>\r\n              <option value=\"16\">16</option>\r\n              <option value=\"32\">32</option>\r\n              <option value=\"64\">64</option> \r\n            </select>\r\n          Loop: <input type=\"checkbox\" onChange={this.onChangeLoop} checked={appState.loop} style={{ marginRight: '10px' }} />\r\n          Times: <input type='number' min='0' value={appState.loopTimes} onChange={this.changeLoopTimes} disabled={!appState.loop} style={{ width: '50px', textAlign: 'center' }} /> <small>(0 infinite)</small>\r\n        </h5>\r\n        <h5 style={{ marginLeft: '25px' }} >\r\n          Initial bar: <input type='number' min='1' max={appState.endBar} value={appState.startBar} onChange={this.changeStartBar} style={{ width: '50px', textAlign: 'center', marginRight: '10px' }} />\r\n          Ending bar: <input type='number' min={appState.startBar} max={appState.bars} value={appState.endBar} onChange={this.changeEndBar} style={{ width: '50px', textAlign: 'center', marginRight: '10px' }} />\r\n        </h5>\r\n        <BeatsGrid bars={appState.bars} tc={appState.tc} channels={appState.channels} addBeat={this.addBeat} removeBeat={this.removeBeat} />\r\n        <Mixer channels={appState.channels} master={appState.master} deleteChannel={this.props.deleteChannel} setAppState={this.props.setAppState} />\r\n        <ControlBar play={this.play} stop={this.stop} record={this.record} playing={appState.playing} recording={appState.recording} filetype={appState.filetype} changeFileType={this.changeFileType} showSamplesList={this.props.showSamplesList} />\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudioEditor;\r\n","let samples = [\r\n  './samples/Kick-Drum-16.wav',\r\n  './samples/Dry-Kick.wav',\r\n  './samples/E-Mu-Proteus-FX-909-Kick.wav',\r\n  './samples/Ensoniq-SQ-1-Rock-Kick.wav',\r\n  './samples/Kawai-K11-Bob-Kick.wav',\r\n  './samples/Bass-Drum-1.wav',\r\n  './samples/Bass-Drum-2.wav',\r\n  './samples/Bass-Drum-3.wav',\r\n  './samples/Kawai-K1r-Rap-Kick.wav',\r\n  './samples/Kick-Drum-11.wav',  \r\n  './samples/Kick-Drum-12.wav',\r\n  './samples/Kick-Drum-13.wav',\r\n  './samples/Kick-Drum-17.wav',\r\n  './samples/Kick-Drum-18.wav',\r\n\r\n\r\n  './samples/Korg-N1R-Snare-Drum-2.wav',\r\n  './samples/Ensoniq-SQ-1-Rock-Snare.wav',\r\n  './samples/Hip-Hop-Snare-1.wav',\r\n  './samples/E-Mu-Proteus-FX-Wacky-Snare.wav',\r\n  './samples/Ensoniq-ESQ-1-Snare.wav',\r\n  './samples/Korg-M3R-Snare.wav',\r\n  \r\n\r\n  './samples/Closed-Hi-Hat-1.wav',\r\n  './samples/Closed-Hi-Hat-2.wav',\r\n  './samples/Closed-Hi-Hat-3.wav',\r\n  './samples/1980s-Casio-Piano-C5.wav',\r\n  './samples/Alesis-Fusion-Acoustic-Bass-C2.wav',\r\n  './samples/Electro-Tom.wav',\r\n];\r\n\r\n/*\r\nlet samples = [\r\n  'http://freewavesamples.com/files/Kick-Drum-16.wav',\r\n  'http://freewavesamples.com/files/Dry-Kick.wav',\r\n  'http://freewavesamples.com/files/E-Mu-Proteus-FX-909-Kick.wav',\r\n  'http://freewavesamples.com/files/Ensoniq-SQ-1-Rock-Kick.wav',\r\n  'http://freewavesamples.com/files/Kawai-K11-Bob-Kick.wav',\r\n  'http://freewavesamples.com/files/Bass-Drum-1.wav',\r\n  'http://freewavesamples.com/files/Bass-Drum-2.wav',\r\n  'http://freewavesamples.com/files/Bass-Drum-3.wav',\r\n  'http://freewavesamples.com/files/Kawai-K1r-Rap-Kick.wav',\r\n  'http://freewavesamples.com/files/Kick-Drum-11.wav',  \r\n  'http://freewavesamples.com/files/Kick-Drum-12.wav',\r\n  'http://freewavesamples.com/files/Kick-Drum-13.wav',\r\n  'http://freewavesamples.com/files/Kick-Drum-17.wav',\r\n  'http://freewavesamples.com/files/Kick-Drum-18.wav',\r\n\r\n\r\n  'http://freewavesamples.com/files/Korg-N1R-Snare-Drum-2.wav',\r\n  'http://freewavesamples.com/files/Ensoniq-SQ-1-Rock-Snare.wav',\r\n  'http://freewavesamples.com/files/Hip-Hop-Snare-1.wav',\r\n  'http://freewavesamples.com/files/E-Mu-Proteus-FX-Wacky-Snare.wav',\r\n  'http://freewavesamples.com/files/Ensoniq-ESQ-1-Snare.wav',\r\n  'http://freewavesamples.com/files/Korg-M3R-Snare.wav',\r\n  \r\n\r\n  'http://freewavesamples.com/files/Closed-Hi-Hat-1.wav',\r\n  'http://freewavesamples.com/files/Closed-Hi-Hat-2.wav',\r\n  'http://freewavesamples.com/files/Closed-Hi-Hat-3.wav',\r\n  'http://freewavesamples.com/files/1980s-Casio-Piano-C5.wav',\r\n  'http://freewavesamples.com/files/Alesis-Fusion-Acoustic-Bass-C2.wav',\r\n  'http://freewavesamples.com/files/Electro-Tom.wav',\r\n];\r\n*/\r\n\r\nexport default samples;\r\n","import React from 'react';\r\nimport AppBar from './AppBar'; \r\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\r\nimport SamplesList from './samples/SamplesList';\r\nimport AudioEditor from './audio-editor/AudioEditor';\r\nimport MyBufferLoader from '../web-audio-api/my-buffer-loader-es6';\r\n\r\nimport samples from './samples/data';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    window.AudioContext =\r\n      window.AudioContext || window.webKitAudioContext;\r\n    let context = new AudioContext();\r\n    let master = context.createGain();\r\n    master.gain.value = 0.5;\r\n    master.connect(context.destination);\r\n\r\n    let recorder = new window.WebAudioRecorder(master, {\r\n      workerDir: '../lib/',     // must end with slash\r\n      options: {\r\n        ogg: {\r\n          quality: 1,\r\n        },\r\n        mp3: {\r\n          bitRate: 320,\r\n        },\r\n      },\r\n    });\r\n\r\n    this.state = {\r\n      context,\r\n      channels: [],\r\n      master,\r\n      showSamplesList: false,\r\n      recorder,\r\n      channelNum: 0,\r\n      loading: false,\r\n      sampleSource: null,\r\n\r\n      samples,\r\n\r\n      playing: false,\r\n      recording: false,\r\n      bars: 4,\r\n      bpm: 85,\r\n      tc: 16,\r\n      loop: false,\r\n      loopTimes: 0, // 0 infinite\r\n      loopCount: 1,\r\n      filetype: 'wav',\r\n\r\n      startBar: 1,\r\n      endBar: 4,\r\n    };\r\n\r\n    this.addChannel = this.addChannel.bind(this);\r\n    this.deleteChannel = this.deleteChannel.bind(this);\r\n    this.bufferLoaded = this.bufferLoaded.bind(this);\r\n    this.setState = this.setState.bind(this);\r\n    this.disconnectAll = this.disconnectAll.bind(this);\r\n    this.stopAllSources = this.stopAllSources.bind(this);\r\n    this.showSamplesList = this.showSamplesList.bind(this);\r\n    this.hideSamplesList = this.hideSamplesList.bind(this);\r\n\r\n    this.appReset = this.appReset.bind(this);\r\n    this.load = this.load.bind(this);\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  appReset() {\r\n    if (this.state.playing) clearTimeout(this.state.timeout);\r\n    this.stopAllSources();\r\n    if (this.state.sampleSource !== null) {\r\n      this.state.sampleSource.stop(0);\r\n      this.state.sampleSource.disconnect();\r\n    }\r\n    this.disconnectAll();\r\n    let master = this.state.master;\r\n    master.gain.value = 0.5;\r\n\r\n    this.setState({\r\n      channels: [],\r\n      master,\r\n      showSamplesList: false,\r\n      channelNum: 0,\r\n      loading: false,\r\n      sampleSource: null,\r\n      playing: false,\r\n      recording: false,\r\n      bars: 4,\r\n      bpm: 85,\r\n      tc: 16,\r\n      loop: false,\r\n      loopTimes: 0,\r\n      loopCount: 1,\r\n      filetype: 'wav',\r\n      startBar: 1,\r\n      endBar: 4,\r\n    });\r\n  }\r\n\r\n  disconnectAll() {\r\n    let channels = this.state.channels;\r\n    for (let i=0; i<channels.length; ++i)\r\n      channels[i].gainNode.disconnect();\r\n  }\r\n\r\n  addChannel(url) {\r\n    let context = this.state.context;\r\n    let gainNode = context.createGain();\r\n    let master = this.state.master;\r\n    let channelId = this.state.channelNum;\r\n    gainNode.connect(master);\r\n    gainNode.gain.value = 0.5;\r\n\r\n    let channels = [\r\n      ...this.state.channels,\r\n      {\r\n        id: channelId,\r\n        url: url,\r\n        beats: [],\r\n        gainNode: gainNode,\r\n        sources: [],\r\n      }\r\n    ];\r\n\r\n    this.setState({\r\n      channels: channels,\r\n      channelNum: this.state.channelNum + 1,\r\n      loading: true,\r\n    });\r\n\r\n    let myBufferLoader = new MyBufferLoader(context, url, channelId, this.bufferLoaded);\r\n    myBufferLoader.load();\r\n  }\r\n\r\n  deleteChannel(id) {\r\n    let channels = this.state.channels;\r\n    for (let i=0; i<channels.length; ++i){\r\n      if (channels[i].id === id){\r\n        channels.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      channels: channels,\r\n    });\r\n  }\r\n\r\n  bufferLoaded(channelId, buffer){\r\n    let channels = this.state.channels;\r\n    for (let i=0; i<channels.length; ++i){\r\n      if (channels[i].id === channelId){\r\n        channels[i].buffer = buffer;\r\n        break;\r\n      }\r\n    }\r\n      \r\n    this.setState({\r\n      channels: channels,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  stopAllSources() {\r\n    let channels = this.state.channels;\r\n    for (let i=0; i<channels.length; ++i){\r\n      let sources = channels[i].sources;\r\n      for (let j=0; j<sources.length; ++j){\r\n        if (sources[j].source !== null){\r\n          sources[j].source.stop(0);\r\n          sources[j].source.disconnect();\r\n          sources[j].source = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  showSamplesList() {\r\n    this.setState({\r\n      showSamplesList: true,\r\n    });\r\n  }\r\n\r\n  hideSamplesList() {\r\n    this.setState({\r\n      showSamplesList: false,\r\n    });\r\n  }\r\n\r\n  load(project) {\r\n    this.appReset();\r\n    let channels = [];\r\n    let context = this.state.context;\r\n    let master = this.state.master;\r\n    master.gain.value = project.masterGain;\r\n    for (let i=0; i<project.channels.length; ++i){\r\n      let pch = project.channels[i];\r\n      let sources = project.channels[i].sources;\r\n      let sourcesToLoad = [];\r\n      \r\n      for (let j=0; j<sources.length; ++j)\r\n        sourcesToLoad.push({ id: sources[j].id, source: null });\r\n\r\n      let gainNode = context.createGain();\r\n      gainNode.connect(master);\r\n      gainNode.gain.value = pch.gain;\r\n      channels.push({\r\n        id: pch.id,\r\n        gainNode: gainNode,\r\n        sources: sourcesToLoad,\r\n        url: pch.url,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      channels: channels,\r\n      master: master,\r\n      channelNum: project.channelNum,\r\n      bars: project.bars,\r\n      bpm: project.bpm,\r\n      tc: project.tc,\r\n      loop: project.loop,\r\n      loopTimes: project.loopTimes,\r\n      filetype: project.filetype,\r\n      loading: true,\r\n      startBar: project.startBar,\r\n      endBar: project.endBar,\r\n    });\r\n\r\n    for (let i=0; i<channels.length; ++i) {\r\n      let ch = channels[i];\r\n      let myBufferLoader = new MyBufferLoader(context, ch.url, ch.id, this.bufferLoaded);\r\n      myBufferLoader.load();\r\n    }\r\n  }\r\n\r\n  save() {\r\n    let state = this.state;\r\n    let channels = [];\r\n\r\n    for (let i=0; i<state.channels.length; ++i) {\r\n      let sources = state.channels[i].sources;\r\n      let sourcesToSave = [];\r\n      for (let j=0; j<sources.length; ++j) {\r\n        let source = state.channels[i].sources[j];\r\n        sourcesToSave.push({ id: source.id });\r\n      }\r\n      \r\n      channels.push({\r\n        id: state.channels[i].id,\r\n        url: state.channels[i].url,\r\n        sources: sourcesToSave,\r\n        gain: state.channels[i].gainNode.gain.value,\r\n      });\r\n    }\r\n\r\n    let project = {\r\n      channels: channels,\r\n      masterGain: state.master.gain.value,\r\n      channelNum: state.channelNum,\r\n      bars: state.bars,\r\n      bpm: state.bpm,\r\n      tc: state.tc,\r\n      loop: state.loop,\r\n      loopTimes: state.loopTimes,\r\n      filetype: state.filetype,\r\n      startBar: state.startBar,\r\n      endBar: state.endBar,\r\n    };\r\n\r\n    window.download(JSON.stringify(project, null, 2), 'MyProject.json');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar new={this.appReset} load={this.load} save={this.save} />\r\n\r\n        <Container style={{marginTop: '25px'}}>\r\n          <Row>\r\n            <Col>\r\n              <AudioEditor appState={this.state} setAppState={this.setState} stopAllSources={this.stopAllSources} showSamplesList={this.showSamplesList} deleteChannel={this.deleteChannel} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        { /* <button onClick={() => console.log(this.state)}>Show state</button> */ }\r\n\r\n        <Modal show={this.state.showSamplesList} onHide={this.hideSamplesList}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Select the samples you want to use</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <SamplesList appState={this.state} setAppState={this.setState} addChannel={this.addChannel} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant='secondary' onClick={this.hideSamplesList}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('app'));"],"sourceRoot":""}